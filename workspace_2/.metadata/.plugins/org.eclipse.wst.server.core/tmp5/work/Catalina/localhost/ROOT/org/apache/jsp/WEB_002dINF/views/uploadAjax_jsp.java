/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-08-18 12:58:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class uploadAjax_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset= UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write(".uploadResult {\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\tbackground-color: gray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".uploadResult ul {\r\n");
      out.write("\tdisplay: flex;\r\n");
      out.write("\tflex-flow: row;\r\n");
      out.write("\tjustify-content: center;\r\n");
      out.write("\talign-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".uploadResult ul li {\r\n");
      out.write("\tlist-style: none;\r\n");
      out.write("\tpadding: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".uploadResult ul li img {\r\n");
      out.write("\twidth: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bigPictureWrapper {\r\n");
      out.write("\tposition: absolute;\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("\tjustify-content: center;\r\n");
      out.write("\talign-items: center;\r\n");
      out.write("\ttop: 0%;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: 100%;\r\n");
      out.write("\tbackground-color: gray;\r\n");
      out.write("\tz-index: 100;\r\n");
      out.write("\tbackground: rgba(255, 255, 255, 0.5);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bigPicture {\r\n");
      out.write("\tposition: relative;\r\n");
      out.write("\tdisplay: flex;\r\n");
      out.write("\tjustify-content: center;\r\n");
      out.write("\talign-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bigPicture img {\r\n");
      out.write("\twidth: 600px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"\r\n");
      out.write("\tintegrity=\"sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=\"\r\n");
      out.write("\tcrossorigin=\"anonymous\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction showImage(fileCallPath) {\r\n");
      out.write("\t\talert(fileCallPath);\r\n");
      out.write("\t\t$(\".bigPictureWrapper\").css(\"display\", \"flex\").show();\r\n");
      out.write("\t\t$(\".bigPicture\")\r\n");
      out.write("\t\t\t\t.html(\r\n");
      out.write("\t\t\t\t\t\t\"<img src='/display?fileName=\"\r\n");
      out.write("\t\t\t\t\t\t\t\t+ encodeURI(fileCallPath) + \"'>\").animate({\r\n");
      out.write("\t\t\t\t\twidth : '100%',\r\n");
      out.write("\t\t\t\t\theight : '100%'\r\n");
      out.write("\t\t\t\t}, 1000);\r\n");
      out.write("\r\n");
      out.write("\t\t$(\".bigPictureWrapper\").on(\"click\", function(e) {\r\n");
      out.write("\t\t\t$(\".bigPicture\").animate({\r\n");
      out.write("\t\t\t\twidth : \"0%\",\r\n");
      out.write("\t\t\t\theight : \"0%\"\r\n");
      out.write("\t\t\t}, 1000);\r\n");
      out.write("\t\t\tsetTimeout(function() {\r\n");
      out.write("\t\t\t\t$('.bigPictureWrapper').hide();\r\n");
      out.write("\t\t\t}, 1000);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tjQuery(function() {\r\n");
      out.write("\t\t//alert(\"test\");\r\n");
      out.write("\t\t/* $(\"#uploadBtn\").on(\"click\",function(e){\r\n");
      out.write("\t\t\talert(\"test2\");\r\n");
      out.write("\t\t\tvar formData = new FormData();\r\n");
      out.write("\t\t\tvar inputFile = $(\"input[name='uploadFile']\");\r\n");
      out.write("\t\t\tvar files = inputFile[0].files;\r\n");
      out.write("\t\t\tconsole.log(files);\r\n");
      out.write("\t\t\t//add filedate to formdata\r\n");
      out.write("\t\t\tfor (var i = 0; i < files.length; i++) {\r\n");
      out.write("\t\t\t\tformData.append(\"uploadFile\", files[i]);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl: '/uploadAjaxAction',\t\r\n");
      out.write("\t\t\t\tprocessData: false,\r\n");
      out.write("\t\t\t\tcontentType: false,\r\n");
      out.write("\t\t\t\tdata: formData,\r\n");
      out.write("\t\t\t\ttype: 'post',\r\n");
      out.write("\t\t\t\tsuccess: function(result) {\r\n");
      out.write("\t\t\t\t\talert(\"upload\");\r\n");
      out.write("\t\t\t\t} \r\n");
      out.write("\t\t\t}).fail(function(){\r\n");
      out.write("\t\t\t\talert(\"fail\");\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t; //$.ajax */\r\n");
      out.write("\r\n");
      out.write("\t\tvar regex = new RegExp(\"(.*?)\\.(exe|sh|zip|alz)$\");\r\n");
      out.write("\t\tvar maxSize = 5242880; //5MB\r\n");
      out.write("\t\tvar cloneObj = $(\".uploadDiv\").clone();\r\n");
      out.write("\t\tvar uploadResult = $(\".uploadResult ul\");\r\n");
      out.write("\r\n");
      out.write("\t\tfunction showUploadedFile(uploadResultArr) {\r\n");
      out.write("\t\t\tvar str = \"\";\r\n");
      out.write("\t\t\t$(uploadResultArr)\r\n");
      out.write("\t\t\t\t\t.each(\r\n");
      out.write("\t\t\t\t\t\t\tfunction(i, obj) {\r\n");
      out.write("\t\t\t\t\t\t\t\tif (!obj.image) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar fileCallPath = encodeURIComponent(obj.uploadPath\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"/\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ obj.uuid\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"_\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ obj.fileName);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar fileLink = fileCallPath.replace(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tnew RegExp(/\\\\/g), \"/\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstr += \"<li><a href='/download?fileName=\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ fileCallPath\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"'>\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"<img src='/resources/img/attach.png'>\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ obj.fileName\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"</a>\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"<span data-file=\\'\"+fileCallPath+\"\\' data-type='file'> x </span>\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"<div></li>\"\r\n");
      out.write("\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t//str += \"<li>\" + obj.fileName + \"</li>\";\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar fileCallPath = encodeURIComponent(obj.uploadPath\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"/s_\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ obj.uuid\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"_\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ obj.fileName);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t//alert(\"fileCallPath: \" +fileCallPath);\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar originPath = obj.uploadPath + \"\\\\\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ obj.uuid + \"_\" + obj.fileName;\r\n");
      out.write("\t\t\t\t\t\t\t\t\toriginPath = originPath.replace(new RegExp(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t/\\\\/g), \"/\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\tstr += \"<li><a href=\\\"javascript:showImage(\\'\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ originPath\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"\\')\\\"><img src='/display?fileName=\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ fileCallPath\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"'></a>\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t+ \"<span data-file=\\'\"+fileCallPath+\"\\' data-type='image'> x <span></li>\";\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t$(\".uploadResult\").on(\"click\", \"span\", function(e) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar targetFile = $(this).data(\"file\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tvar type = $(this).data(\"type\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\tconsole.log(targetFile);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\turl: '/deleteFile',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdata: {fileName: targetFile, type: type},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdataType: 'text',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype: \"post\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tsuccess: function(result) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\talert(result);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t});//$.ajax\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\tuploadResult.append(str);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tfunction checkExtension(fileName, fileSize) {\r\n");
      out.write("\t\t\tif (fileSize >= maxSize) {\r\n");
      out.write("\t\t\t\talert(\"파일 사이즈 초과\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif (regex.test(fileName)) {\r\n");
      out.write("\t\t\t\talert(\"해당 종류의 파일은 업로드할 수 없습니다.\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t$(\"#uploadBtn\").on(\"click\", function(e) {\r\n");
      out.write("\t\t\tvar formData = new FormData();\r\n");
      out.write("\t\t\tvar inputFile = $(\"input[name='uploadFile']\");\r\n");
      out.write("\t\t\tvar files = inputFile[0].files;\r\n");
      out.write("\t\t\tconsole.log(files);\r\n");
      out.write("\t\t\t//alert(\"test11\");\r\n");
      out.write("\t\t\tfor (var i = 0; i < files.length; i++) {\r\n");
      out.write("\t\t\t\tif (!checkExtension(files[i].name, files[i].size)) {\r\n");
      out.write("\t\t\t\t\t//alert(\"test12\");\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tformData.append(\"uploadFile\", files[i]);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : '/uploadAjaxAction',\r\n");
      out.write("\t\t\t\tprocessData : false,\r\n");
      out.write("\t\t\t\tcontentType : false,\r\n");
      out.write("\t\t\t\tdata : formData,\r\n");
      out.write("\t\t\t\ttype : 'post',\r\n");
      out.write("\t\t\t\tdataType : 'json',\r\n");
      out.write("\t\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\t\talert(\"upload\");\r\n");
      out.write("\t\t\t\t\tconsole.log(result);\r\n");
      out.write("\t\t\t\t\t// 화면에서 업로드된 파일 확인\r\n");
      out.write("\t\t\t\t\tshowUploadedFile(result);\r\n");
      out.write("\t\t\t\t\t// 첨부파일 부분 초기화\r\n");
      out.write("\t\t\t\t\t$(\".uploadDiv\").html(cloneObj.html());\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}); //$.ajax \r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1>Upload with Ajax</h1>\r\n");
      out.write("\t<div class=\"uploadDiv\">\r\n");
      out.write("\t\t<input type='file' name='uploadFile' multiple>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"uploadResult\">\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<button id='uploadBtn'>Upload</button>\r\n");
      out.write("\t<div class=\"bigPictureWrapper\">\r\n");
      out.write("\t\t<div class=\"bigPicture\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
